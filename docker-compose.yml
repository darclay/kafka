version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
     - my-network

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
     - my-network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    environment:
      # SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_DEBUG: 'true'
    ports:
      - "8081:8081"
    networks:
     - my-network

  schema:
    container_name: schema
    image: confluentinc/cp-schema-registry:latest
    volumes:
      - ./avrofile/keyschema.avro:/avrofile/keyschema.avro
      - ./avrofile/valueschema.avro:/avrofile/valueschema.avro
    command: ["tail", "-f", "/dev/null"]
    environment:
      AVRO_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      AVRO_KEY_SCHEMA_PATH: /keyschema.avro
      AVRO_VALUE_SCHEMA_PATH: /valueschema.avro
    networks:
      - my-network

  topic-creator:
    image: confluentinc/cp-kafka:latest
    container_name: topic-creator
    depends_on:
      - broker
    entrypoint: bash -c "kafka-topics --create --topic my-user-topic --partitions 1 --replication-factor 1 --bootstrap-server broker:9092"
    networks:
     - my-network

networks:
  my-network:
    driver: bridge
